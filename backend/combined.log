{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T12:45:20.833Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T12:47:36.828Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T12:47:53.484Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T12:48:07.760Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T12:54:19.739Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T12:55:39.368Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T12:58:53.919Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        email: \"aabiljr@gmail.com\"\n      },\n      {\n        no_hp: undefined\n      }\n    ],\n?   email?: String,\n?   no_hp?: String,\n?   alamat?: Int,\n?   AND?: usersWhereInput | usersWhereInput[],\n?   NOT?: usersWhereInput | usersWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   seller?: BoolFilter | Boolean,\n?   refresh_token?: StringNullableFilter | String | Null,\n?   refresh_token_seller?: StringNullableFilter | String | Null,\n?   alamat_relasi?: AlamatNullableRelationFilter | alamatWhereInput | Null,\n?   cart?: CartNullableRelationFilter | cartWhereInput | Null,\n?   product?: ProductListRelationFilter,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type usersWhereUniqueInput needs at least one of `email`, `no_hp` or `alamat` arguments. Available options are marked with ?.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-30T12:58:54.514Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T12:59:18.441Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        email: \"aabiljr@gmail.com\"\n      },\n      {\n        no_hp: undefined\n      }\n    ],\n?   email?: String,\n?   no_hp?: String,\n?   alamat?: Int,\n?   AND?: usersWhereInput | usersWhereInput[],\n?   NOT?: usersWhereInput | usersWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   seller?: BoolFilter | Boolean,\n?   refresh_token?: StringNullableFilter | String | Null,\n?   refresh_token_seller?: StringNullableFilter | String | Null,\n?   alamat_relasi?: AlamatNullableRelationFilter | alamatWhereInput | Null,\n?   cart?: CartNullableRelationFilter | cartWhereInput | Null,\n?   product?: ProductListRelationFilter,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type usersWhereUniqueInput needs at least one of `email`, `no_hp` or `alamat` arguments. Available options are marked with ?.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-30T12:59:18.462Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T12:59:56.372Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        email: \"aabiljr@gmail.com\"\n      },\n      {\n        no_hp: undefined\n      }\n    ],\n?   email?: String,\n?   no_hp?: String,\n?   alamat?: Int,\n?   AND?: usersWhereInput | usersWhereInput[],\n?   NOT?: usersWhereInput | usersWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   seller?: BoolFilter | Boolean,\n?   refresh_token?: StringNullableFilter | String | Null,\n?   refresh_token_seller?: StringNullableFilter | String | Null,\n?   alamat_relasi?: AlamatNullableRelationFilter | alamatWhereInput | Null,\n?   cart?: CartNullableRelationFilter | cartWhereInput | Null,\n?   product?: ProductListRelationFilter,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type usersWhereUniqueInput needs at least one of `email`, `no_hp` or `alamat` arguments. Available options are marked with ?.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-30T12:59:56.402Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T13:06:45.367Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        email: \"aabiljr@gmail.com\"\n      },\n      {\n        no_hp: undefined\n      }\n    ],\n?   email?: String,\n?   no_hp?: String,\n?   alamat?: Int,\n?   AND?: usersWhereInput | usersWhereInput[],\n?   NOT?: usersWhereInput | usersWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   seller?: BoolFilter | Boolean,\n?   refresh_token?: StringNullableFilter | String | Null,\n?   refresh_token_seller?: StringNullableFilter | String | Null,\n?   alamat_relasi?: AlamatNullableRelationFilter | alamatWhereInput | Null,\n?   cart?: CartNullableRelationFilter | cartWhereInput | Null,\n?   product?: ProductListRelationFilter,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type usersWhereUniqueInput needs at least one of `email`, `no_hp` or `alamat` arguments. Available options are marked with ?.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-30T13:06:45.714Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T13:07:52.825Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        email: \"aabiljr@gmail.com\"\n      },\n      {\n        no_hp: undefined\n      }\n    ],\n?   email?: String,\n?   no_hp?: String,\n?   alamat?: Int,\n?   AND?: usersWhereInput | usersWhereInput[],\n?   NOT?: usersWhereInput | usersWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   seller?: BoolFilter | Boolean,\n?   refresh_token?: StringNullableFilter | String | Null,\n?   refresh_token_seller?: StringNullableFilter | String | Null,\n?   alamat_relasi?: AlamatNullableRelationFilter | alamatWhereInput | Null,\n?   cart?: CartNullableRelationFilter | cartWhereInput | Null,\n?   product?: ProductListRelationFilter,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type usersWhereUniqueInput needs at least one of `email`, `no_hp` or `alamat` arguments. Available options are marked with ?.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-30T13:07:52.868Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T13:08:15.955Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        email: \"aabiljr@gmail.com\"\n      },\n      {\n        no_hp: undefined\n      }\n    ],\n?   email?: String,\n?   no_hp?: String,\n?   alamat?: Int,\n?   AND?: usersWhereInput | usersWhereInput[],\n?   NOT?: usersWhereInput | usersWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   seller?: BoolFilter | Boolean,\n?   refresh_token?: StringNullableFilter | String | Null,\n?   refresh_token_seller?: StringNullableFilter | String | Null,\n?   alamat_relasi?: AlamatNullableRelationFilter | alamatWhereInput | Null,\n?   cart?: CartNullableRelationFilter | cartWhereInput | Null,\n?   product?: ProductListRelationFilter,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type usersWhereUniqueInput needs at least one of `email`, `no_hp` or `alamat` arguments. Available options are marked with ?.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-30T13:08:15.977Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        email: \"aabiljr@gmail.com\"\n      },\n      {\n        no_hp: undefined\n      }\n    ],\n?   email?: String,\n?   no_hp?: String,\n?   alamat?: Int,\n?   AND?: usersWhereInput | usersWhereInput[],\n?   NOT?: usersWhereInput | usersWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   seller?: BoolFilter | Boolean,\n?   refresh_token?: StringNullableFilter | String | Null,\n?   refresh_token_seller?: StringNullableFilter | String | Null,\n?   alamat_relasi?: AlamatNullableRelationFilter | alamatWhereInput | Null,\n?   cart?: CartNullableRelationFilter | cartWhereInput | Null,\n?   product?: ProductListRelationFilter,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type usersWhereUniqueInput needs at least one of `email`, `no_hp` or `alamat` arguments. Available options are marked with ?.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-30T13:08:19.552Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        email: \"aabiljr@gmail.com\"\n      },\n      {\n        no_hp: undefined\n      }\n    ],\n?   email?: String,\n?   no_hp?: String,\n?   alamat?: Int,\n?   AND?: usersWhereInput | usersWhereInput[],\n?   NOT?: usersWhereInput | usersWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   seller?: BoolFilter | Boolean,\n?   refresh_token?: StringNullableFilter | String | Null,\n?   refresh_token_seller?: StringNullableFilter | String | Null,\n?   alamat_relasi?: AlamatNullableRelationFilter | alamatWhereInput | Null,\n?   cart?: CartNullableRelationFilter | cartWhereInput | Null,\n?   product?: ProductListRelationFilter,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type usersWhereUniqueInput needs at least one of `email`, `no_hp` or `alamat` arguments. Available options are marked with ?.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-30T13:08:20.819Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T13:09:06.528Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        email: \"aabiljr@gmail.com\"\n      },\n      {\n        no_hp: undefined\n      }\n    ],\n?   email?: String,\n?   no_hp?: String,\n?   alamat?: Int,\n?   AND?: usersWhereInput | usersWhereInput[],\n?   NOT?: usersWhereInput | usersWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   seller?: BoolFilter | Boolean,\n?   refresh_token?: StringNullableFilter | String | Null,\n?   refresh_token_seller?: StringNullableFilter | String | Null,\n?   alamat_relasi?: AlamatNullableRelationFilter | alamatWhereInput | Null,\n?   cart?: CartNullableRelationFilter | cartWhereInput | Null,\n?   product?: ProductListRelationFilter,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type usersWhereUniqueInput needs at least one of `email`, `no_hp` or `alamat` arguments. Available options are marked with ?.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-30T13:09:06.578Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        email: \"aabiljr@gmail.com\"\n      },\n      {\n        no_hp: undefined\n      }\n    ],\n?   email?: String,\n?   no_hp?: String,\n?   alamat?: Int,\n?   AND?: usersWhereInput | usersWhereInput[],\n?   NOT?: usersWhereInput | usersWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   seller?: BoolFilter | Boolean,\n?   refresh_token?: StringNullableFilter | String | Null,\n?   refresh_token_seller?: StringNullableFilter | String | Null,\n?   alamat_relasi?: AlamatNullableRelationFilter | alamatWhereInput | Null,\n?   cart?: CartNullableRelationFilter | cartWhereInput | Null,\n?   product?: ProductListRelationFilter,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type usersWhereUniqueInput needs at least one of `email`, `no_hp` or `alamat` arguments. Available options are marked with ?.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-30T13:09:09.086Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        email: \"aabiljr@gmail.com\"\n      },\n      {\n        no_hp: undefined\n      }\n    ],\n?   email?: String,\n?   no_hp?: String,\n?   alamat?: Int,\n?   AND?: usersWhereInput | usersWhereInput[],\n?   NOT?: usersWhereInput | usersWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   seller?: BoolFilter | Boolean,\n?   refresh_token?: StringNullableFilter | String | Null,\n?   refresh_token_seller?: StringNullableFilter | String | Null,\n?   alamat_relasi?: AlamatNullableRelationFilter | alamatWhereInput | Null,\n?   cart?: CartNullableRelationFilter | cartWhereInput | Null,\n?   product?: ProductListRelationFilter,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type usersWhereUniqueInput needs at least one of `email`, `no_hp` or `alamat` arguments. Available options are marked with ?.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-30T13:09:10.642Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T13:09:33.258Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T13:11:37.546Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T13:13:00.503Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T13:24:52.762Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T13:49:48.429Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T13:50:32.966Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T13:51:11.542Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T13:51:53.759Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T13:52:34.752Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T14:03:15.291Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T14:04:18.378Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n?   email?: true,\n?   no_hp?: true,\n?   password?: true,\n?   name?: true,\n?   alamat?: true,\n?   seller?: true,\n?   refresh_token?: true,\n?   refresh_token_seller?: true,\n?   alamat_relasi?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nThe `select` statement for type users needs at least one truthy value.","service":"user-service","target":"users.findMany","timestamp":"2023-12-30T14:04:18.560Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T14:04:45.433Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T14:08:19.121Z"}
{"level":"error","message":"\nInvalid `prisma.users.create()` invocation:\n\n{\n  data: {\n    email: \"aabiljr@gmail.com\",\n    no_hp: \"085238586875\",\n    name: \"habil\",\n    password: \"$2b$11$qmcncS5o8cGgx1qHb0KGx.F72B4uvnruZcnK5V3mPE2YThnuFeUvm\"\n  },\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat: true,\n    ~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat_relasi?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.create","timestamp":"2023-12-30T14:08:19.582Z"}
{"level":"error","message":"\nInvalid `prisma.users.create()` invocation:\n\n{\n  data: {\n    email: \"aabiljr@gmail.com\",\n    no_hp: \"085238586875\",\n    name: \"habil\",\n    password: \"$2b$11$YCYhZWbHKFDDxoNDpBfjN.dhS4SHYjJmYfmQPpODezfvAx8ZtkG/2\"\n  },\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat: true,\n    ~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat_relasi?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.create","timestamp":"2023-12-30T14:08:27.025Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T14:09:00.500Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T14:14:51.887Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T14:19:10.552Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T14:21:23.832Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T14:39:34.005Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T14:41:00.742Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T14:41:46.201Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T14:42:46.447Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T14:43:16.825Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T14:43:36.178Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T14:44:00.174Z"}
{"level":"error","message":"\nInvalid `prisma.alamat.create()` invocation:\n\n{\n  data: {\n    village: \"rhee loka\",\n    subsidtrick: \"sumbawa besar\",\n    regency: \"sumbawa\",\n    province: \"ntb\",\n    country: \"indonesia\",\n    id: 2,\n+   kode_pos: Int\n  }\n}\n\nArgument `kode_pos` is missing.","service":"user-service","target":"alamat.create","timestamp":"2023-12-30T14:44:01.000Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T14:44:30.569Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T14:46:52.351Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-30T14:48:02.014Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T04:29:21.979Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-31T04:29:26.230Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T04:29:29.114Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-31T04:29:33.201Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T04:29:53.363Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-31T04:29:57.426Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T04:30:15.960Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-31T04:30:20.021Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T04:33:32.186Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        email: \"aabiljr@gmail.com\"\n      },\n      {\n        no_hp: \"aabiljr@gmail.com\"\n      }\n    ],\n?   email?: String,\n?   no_hp?: String,\n?   alamat_id?: Int,\n?   AND?: usersWhereInput | usersWhereInput[],\n?   NOT?: usersWhereInput | usersWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   seller?: BoolFilter | Boolean,\n?   refresh_token?: StringNullableFilter | String | Null,\n?   refresh_token_seller?: StringNullableFilter | String | Null,\n?   alamat?: AlamatNullableRelationFilter | alamatWhereInput | Null,\n?   cart?: CartNullableRelationFilter | cartWhereInput | Null,\n?   product?: ProductListRelationFilter,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type usersWhereUniqueInput needs at least one of `email`, `no_hp` or `alamat_id` arguments. Available options are marked with ?.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-31T04:33:32.489Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T04:34:27.000Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        email: \"aabiljr@gmail.com\"\n      },\n      {\n        no_hp: \"aabiljr@gmail.com\"\n      }\n    ],\n?   email?: String,\n?   no_hp?: String,\n?   alamat_id?: Int,\n?   AND?: usersWhereInput | usersWhereInput[],\n?   NOT?: usersWhereInput | usersWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   seller?: BoolFilter | Boolean,\n?   refresh_token?: StringNullableFilter | String | Null,\n?   refresh_token_seller?: StringNullableFilter | String | Null,\n?   alamat?: AlamatNullableRelationFilter | alamatWhereInput | Null,\n?   cart?: CartNullableRelationFilter | cartWhereInput | Null,\n?   product?: ProductListRelationFilter,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type usersWhereUniqueInput needs at least one of `email`, `no_hp` or `alamat_id` arguments. Available options are marked with ?.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-31T04:34:27.625Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T04:35:51.020Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        email: \"aabiljr@gmail.com\"\n      },\n      {\n        no_hp: \"aabiljr@gmail.com\"\n      }\n    ],\n?   email?: String,\n?   no_hp?: String,\n?   alamat_id?: Int,\n?   AND?: usersWhereInput | usersWhereInput[],\n?   NOT?: usersWhereInput | usersWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   seller?: BoolFilter | Boolean,\n?   refresh_token?: StringNullableFilter | String | Null,\n?   refresh_token_seller?: StringNullableFilter | String | Null,\n?   alamat?: AlamatNullableRelationFilter | alamatWhereInput | Null,\n?   cart?: CartNullableRelationFilter | cartWhereInput | Null,\n?   product?: ProductListRelationFilter,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type usersWhereUniqueInput needs at least one of `email`, `no_hp` or `alamat_id` arguments. Available options are marked with ?.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-31T04:35:51.052Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T04:36:36.759Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        email: \"aabiljr@gmail.com\"\n      },\n      {\n        no_hp: \"aabiljr@gmail.com\"\n      }\n    ],\n?   email?: String,\n?   no_hp?: String,\n?   alamat_id?: Int,\n?   AND?: usersWhereInput | usersWhereInput[],\n?   NOT?: usersWhereInput | usersWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   seller?: BoolFilter | Boolean,\n?   refresh_token?: StringNullableFilter | String | Null,\n?   refresh_token_seller?: StringNullableFilter | String | Null,\n?   alamat?: AlamatNullableRelationFilter | alamatWhereInput | Null,\n?   cart?: CartNullableRelationFilter | cartWhereInput | Null,\n?   product?: ProductListRelationFilter,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type usersWhereUniqueInput needs at least one of `email`, `no_hp` or `alamat_id` arguments. Available options are marked with ?.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-31T04:36:37.796Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T04:37:06.148Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        email: \"aabiljr@gmail.com\"\n      },\n      {\n        no_hp: \"aabiljr@gmail.com\"\n      }\n    ],\n?   email?: String,\n?   no_hp?: String,\n?   alamat_id?: Int,\n?   AND?: usersWhereInput | usersWhereInput[],\n?   NOT?: usersWhereInput | usersWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   seller?: BoolFilter | Boolean,\n?   refresh_token?: StringNullableFilter | String | Null,\n?   refresh_token_seller?: StringNullableFilter | String | Null,\n?   alamat?: AlamatNullableRelationFilter | alamatWhereInput | Null,\n?   cart?: CartNullableRelationFilter | cartWhereInput | Null,\n?   product?: ProductListRelationFilter,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type usersWhereUniqueInput needs at least one of `email`, `no_hp` or `alamat_id` arguments. Available options are marked with ?.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-31T04:37:06.175Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T04:37:24.426Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        email: \"aabiljr@gmail.com\"\n      },\n      {\n        no_hp: \"aabiljr@gmail.com\"\n      }\n    ],\n?   email?: String,\n?   no_hp?: String,\n?   alamat_id?: Int,\n?   AND?: usersWhereInput | usersWhereInput[],\n?   NOT?: usersWhereInput | usersWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   seller?: BoolFilter | Boolean,\n?   refresh_token?: StringNullableFilter | String | Null,\n?   refresh_token_seller?: StringNullableFilter | String | Null,\n?   alamat?: AlamatNullableRelationFilter | alamatWhereInput | Null,\n?   cart?: CartNullableRelationFilter | cartWhereInput | Null,\n?   product?: ProductListRelationFilter,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type usersWhereUniqueInput needs at least one of `email`, `no_hp` or `alamat_id` arguments. Available options are marked with ?.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-31T04:37:24.454Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T04:37:40.414Z"}
{"level":"error","message":"\nInvalid `prisma.users.findUnique()` invocation:\n\n{\n  where: {\n    OR: [\n      {\n        email: \"aabiljr@gmail.com\"\n      },\n      {\n        no_hp: \"aabiljr@gmail.com\"\n      }\n    ],\n?   email?: String,\n?   no_hp?: String,\n?   alamat_id?: Int,\n?   AND?: usersWhereInput | usersWhereInput[],\n?   NOT?: usersWhereInput | usersWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   seller?: BoolFilter | Boolean,\n?   refresh_token?: StringNullableFilter | String | Null,\n?   refresh_token_seller?: StringNullableFilter | String | Null,\n?   alamat?: AlamatNullableRelationFilter | alamatWhereInput | Null,\n?   cart?: CartNullableRelationFilter | cartWhereInput | Null,\n?   product?: ProductListRelationFilter,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type usersWhereUniqueInput needs at least one of `email`, `no_hp` or `alamat_id` arguments. Available options are marked with ?.","service":"user-service","target":"users.findUnique","timestamp":"2023-12-31T04:37:40.438Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T04:38:30.429Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T04:39:48.701Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T04:46:48.415Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T04:47:21.981Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T04:47:42.928Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T05:13:06.725Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:13:07.102Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:13:32.606Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:13:33.644Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:13:33.779Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:13:33.982Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:13:34.120Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:13:34.325Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:13:34.459Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:13:34.647Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:13:34.784Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:13:34.996Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:13:35.137Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:13:35.297Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T05:14:20.535Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:14:20.557Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:14:22.444Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:14:23.180Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:14:23.314Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:14:23.522Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:14:23.625Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:14:23.830Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:14:23.954Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:14:24.142Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:14:24.528Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:14:24.666Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T05:15:07.249Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: {}\n        }\n      },\n      {\n        email: {\n          contains: {}\n        }\n      },\n      {\n        no_hp: {\n          contains: {}\n        }\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `_ref` is missing.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T05:15:07.274Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T05:15:21.405Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T05:16:14.644Z"}
{"level":"error","message":"\nInvalid `prisma.users.create()` invocation:\n\n\nUnique constraint failed on the constraint: `users_no_hp_key`","service":"user-service","target":"users.create","timestamp":"2023-12-31T05:16:35.828Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T05:19:14.751Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T09:49:43.418Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T09:49:47.708Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T10:32:57.561Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n\nThe column `furniture_shop.users.alamat_id` does not exist in the current database.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T10:32:57.851Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T10:47:44.781Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T10:51:18.267Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  skip: 0,\n  take: 20,\n  where: {\n    OR: [\n      {\n        name: {\n          contains: \"rhee\"\n        }\n      },\n      {\n        email: {\n          contains: \"rhee\"\n        }\n      },\n      {\n        no_hp: {\n          contains: \"rhee\"\n        }\n      },\n      {\n        alamat: \"rhee\"\n      }\n    ]\n  },\n  select: {\n    name: true,\n    no_hp: true,\n    seller: true,\n    alamat: true,\n    product: true\n  }\n}\n\nArgument `alamat`: Invalid value provided. Expected AlamatNullableRelationFilter, alamatWhereInput or Null, provided String.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T10:51:18.577Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T10:52:35.408Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T10:53:47.040Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T10:55:58.717Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T11:08:43.773Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T11:10:10.815Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T11:11:14.602Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T11:11:50.209Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T11:13:12.152Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T11:13:35.229Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T11:14:01.644Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T11:14:58.896Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T11:15:36.954Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T11:16:18.440Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T11:21:58.593Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T11:24:39.275Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T11:25:00.858Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T11:32:22.579Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T11:33:58.631Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T11:35:11.746Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T11:36:55.339Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T11:39:55.001Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T15:02:11.836Z"}
{"level":"error","message":"\nInvalid `prisma.users.findFirst()` invocation:\n\n\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`.","service":"user-service","target":"users.findFirst","timestamp":"2023-12-31T15:02:16.075Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T15:03:41.650Z"}
{"level":"error","message":"\nInvalid `prisma.users.findFirst()` invocation:\n\n\nDatabase `furniture_shop` does not exist on the database server at `localhost:3306`.","service":"user-service","target":"users.findFirst","timestamp":"2023-12-31T15:03:41.829Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T15:07:21.372Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T15:08:55.969Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T15:09:38.616Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T15:20:33.564Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T15:23:20.994Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T15:24:07.244Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T15:24:36.885Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T15:25:55.843Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T15:26:28.807Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T16:59:54.993Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T16:59:55.244Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T17:03:18.367Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:18.387Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:43.047Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:43.816Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:43.949Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:44.184Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:44.332Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:44.584Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:44.674Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:44.951Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:45.069Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:45.294Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:45.415Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:45.653Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:45.795Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:46.062Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:46.197Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:46.427Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:46.565Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:46.779Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:47.023Z"}
{"level":"error","message":"\nInvalid `prisma.users.findMany()` invocation:\n\n{\n  select: {\n    email: true,\n    no_hp: true,\n    name: true,\n    alamat_relasi: true,\n    ~~~~~~~~~~~~~\n    seller: true,\n    refresh_token: true,\n    refresh_token_seller: true,\n?   password?: true,\n?   alamat_id?: true,\n?   alamat?: true,\n?   cart?: true,\n?   product?: true,\n?   order?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `alamat_relasi` for select statement on model `users`. Available options are marked with ?.","service":"user-service","target":"users.findMany","timestamp":"2023-12-31T17:03:47.108Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2023-12-31T17:04:48.202Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-01T07:04:09.064Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-01T07:05:09.732Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-01T07:06:24.419Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-01T07:36:36.511Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-01T12:08:43.262Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-01T12:12:24.264Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-01T12:22:19.002Z"}
{"level":"error","message":"\nInvalid `prisma.users.create()` invocation:\n\n\nUnique constraint failed on the constraint: `users_no_hp_key`","service":"user-service","target":"users.create","timestamp":"2024-01-01T12:31:16.753Z"}
{"level":"error","message":"\nInvalid `prisma.users.create()` invocation:\n\n\nUnique constraint failed on the constraint: `users_no_hp_key`","service":"user-service","target":"users.create","timestamp":"2024-01-01T12:31:22.425Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-01T12:34:51.546Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-01T12:39:04.426Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-01T12:41:05.045Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-01T12:42:25.897Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-01T13:02:44.532Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-01T13:06:29.841Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-04T12:12:53.117Z"}
{"level":"error","message":"\nInvalid `prisma.users.count()` invocation:\n\n\nDatabase `furniture` does not exist on the database server at `localhost:3306`.","service":"user-service","target":"users.count","timestamp":"2024-01-04T12:12:53.932Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-04T12:27:11.742Z"}
{"level":"error","message":"\nInvalid `prisma.users.count()` invocation:\n\n\nThe table `users` does not exist in the current database.","service":"user-service","target":"users.count","timestamp":"2024-01-04T12:27:12.404Z"}
{"level":"error","message":"\nInvalid `prisma.users.count()` invocation:\n\n\nThe table `users` does not exist in the current database.","service":"user-service","target":"users.count","timestamp":"2024-01-04T12:27:21.091Z"}
{"level":"error","message":"\nInvalid `prisma.users.count()` invocation:\n\n\nThe table `users` does not exist in the current database.","service":"user-service","target":"users.count","timestamp":"2024-01-04T12:27:21.745Z"}
{"level":"error","message":"\nInvalid `prisma.users.count()` invocation:\n\n\nThe table `users` does not exist in the current database.","service":"user-service","target":"users.count","timestamp":"2024-01-04T12:27:21.885Z"}
{"level":"error","message":"\nInvalid `prisma.users.count()` invocation:\n\n\nThe table `users` does not exist in the current database.","service":"user-service","target":"users.count","timestamp":"2024-01-04T12:27:22.054Z"}
{"level":"error","message":"\nInvalid `prisma.users.count()` invocation:\n\n\nThe table `users` does not exist in the current database.","service":"user-service","target":"users.count","timestamp":"2024-01-04T12:27:22.293Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-04T12:33:52.930Z"}
{"level":"info","message":"Starting a mysql pool with 5 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-04T12:53:11.803Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T05:25:53.088Z"}
{"level":"error","message":"\nInvalid `prisma.users.update()` invocation:\n\n\nThe provided value for the column is too long for the column's type. Column: (not available)","service":"user-service","target":"users.update","timestamp":"2024-01-05T05:27:00.709Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T05:28:03.099Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T06:41:07.984Z"}
{"level":"error","message":"\nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    nama_product: \"sepatu\",\n    deks: \"sangat nyaman digunakan\",\n    price: 30000,\n    catrgory: \"sepatu\",\n    stok: 3,\n    sold_by: \"habil123\",\n    images: \"http://localhost:3000/images/1704436867977-Sii.jpg\",\n+   category: String\n  }\n}\n\nArgument `category` is missing.","service":"user-service","target":"product.create","timestamp":"2024-01-05T06:41:08.038Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T06:41:45.983Z"}
{"level":"error","message":"\nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    nama_product: \"sepatu\",\n    deks: \"sangat nyaman digunakan\",\n    price: 30000,\n    category: \"sepatu\",\n    stok: 3,\n    sold_by: \"habil123\",\n    images: \"http://localhost:3000/images/1704436905972-Sii.jpg\",\n    ~~~~~~\n?   id?: Int,\n?   img?: String | Null,\n?   cart?: cartUncheckedCreateNestedManyWithoutProductInput\n  }\n}\n\nUnknown argument `images`. Did you mean `img`? Available options are marked with ?.","service":"user-service","target":"product.create","timestamp":"2024-01-05T06:41:46.032Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T06:42:31.276Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T06:43:56.002Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T06:55:45.398Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T06:57:14.918Z"}
{"level":"error","message":"\nInvalid `prisma.product.findUnique()` invocation:\n\n{\n  where: {\n    id: \"1\"\n        ~~~\n  }\n}\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","service":"user-service","target":"product.findUnique","timestamp":"2024-01-05T06:57:14.968Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T06:58:04.326Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T06:58:49.488Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T06:59:43.486Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T06:59:54.489Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T07:01:53.841Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T07:02:19.787Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T07:03:57.567Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T07:46:15.662Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T07:46:40.802Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T07:47:37.389Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T07:48:07.113Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T07:48:30.541Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T07:49:09.907Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T07:49:58.713Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T07:54:16.399Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T08:06:34.080Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T08:25:06.423Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T08:29:00.924Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T08:31:25.806Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T08:31:47.647Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T08:32:37.027Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T08:33:12.137Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T08:33:37.285Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T08:46:11.278Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-05T08:47:41.902Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T04:17:32.726Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T04:19:05.766Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T04:24:48.699Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T05:17:09.245Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T05:21:01.962Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T05:27:27.938Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T05:55:34.959Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T05:59:31.966Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T07:03:11.407Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T07:03:23.424Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T07:03:34.169Z"}
{"level":"error","message":"\nInvalid `prisma.cart.create()` invocation:\n\n\nUnique constraint failed on the fields: (`owner`)","service":"user-service","target":"cart.create","timestamp":"2024-01-06T07:04:12.007Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T07:24:52.693Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T07:34:59.616Z"}
{"level":"error","message":"\nInvalid `prisma.cart.create()` invocation:\n\n{\n  data: {\n    id_product: 1,\n    count: 3,\n    owner: \"aabiljr@gmail.com\",\n    price: 90000,\n+   id: Int\n  }\n}\n\nArgument `id` is missing.","service":"user-service","target":"cart.create","timestamp":"2024-01-06T07:35:18.822Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T07:37:47.002Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T08:23:36.641Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T08:25:25.939Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T08:34:06.439Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T08:35:22.277Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T08:36:04.854Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T08:39:28.392Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T08:41:02.311Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T08:41:26.706Z"}
{"level":"error","message":"\nInvalid `prisma.cart.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","service":"user-service","target":"cart.delete","timestamp":"2024-01-06T08:41:26.766Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T08:42:01.138Z"}
{"level":"error","message":"\nInvalid `prisma.cart.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","service":"user-service","target":"cart.delete","timestamp":"2024-01-06T08:42:01.194Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T08:42:21.096Z"}
{"level":"error","message":"\nInvalid `prisma.cart.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","service":"user-service","target":"cart.delete","timestamp":"2024-01-06T08:42:21.164Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T08:42:56.502Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T08:43:35.725Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T08:45:16.355Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-06T08:45:29.559Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-08T06:43:43.752Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-08T06:57:05.629Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-08T06:59:06.845Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-08T06:59:37.263Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-08T07:01:00.369Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:09:02.532Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:17:46.638Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:19:58.439Z"}
{"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n{\n  data: {\n    id_order: \"order1\",\n    payment_using: \"BNI\",\n    alamat_jalan: \"jl pemuda\",\n    alamat_village: \"rhee loka\",\n    alamat_subsidtrick: \"rhee\",\n    alamat_regency: \"sumbawa besar\",\n    alamat_province: \"NTB\",\n    country: \"indonesia\",\n    kode_pos: 432,\n    id: undefined,\n    email_customer: \"aabiljr@gmail.com\",\n+   jumlah_product: Int\n  }\n}\n\nArgument `jumlah_product` is missing.","service":"user-service","target":"order.create","timestamp":"2024-01-09T07:19:58.491Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:22:11.497Z"}
{"level":"error","message":"\nInvalid `prisma.product_order.create()` invocation:\n\n{\n  data: {\n    id: 1,\n    price: 30000,\n    jumlah: 3,\n+   product: {\n+     create: productCreateWithoutProduct_orderInput | productUncheckedCreateWithoutProduct_orderInput,\n+     connectOrCreate: productCreateOrConnectWithoutProduct_orderInput,\n+     connect: productWhereUniqueInput\n+   }\n  }\n}\n\nArgument `product` is missing.","service":"user-service","target":"product_order.create","timestamp":"2024-01-09T07:22:11.562Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:22:50.692Z"}
{"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n\nUnique constraint failed on the fields: (`id_order`)","service":"user-service","target":"order.create","timestamp":"2024-01-09T07:22:50.869Z"}
{"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n\nUnique constraint failed on the fields: (`id_order`)","service":"user-service","target":"order.create","timestamp":"2024-01-09T07:22:58.986Z"}
{"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n\nUnique constraint failed on the fields: (`id_order`)","service":"user-service","target":"order.create","timestamp":"2024-01-09T07:22:59.169Z"}
{"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n\nUnique constraint failed on the fields: (`id_order`)","service":"user-service","target":"order.create","timestamp":"2024-01-09T07:22:59.333Z"}
{"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n\nUnique constraint failed on the fields: (`id_order`)","service":"user-service","target":"order.create","timestamp":"2024-01-09T07:22:59.499Z"}
{"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n\nUnique constraint failed on the fields: (`id_order`)","service":"user-service","target":"order.create","timestamp":"2024-01-09T07:22:59.680Z"}
{"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n\nUnique constraint failed on the fields: (`id_order`)","service":"user-service","target":"order.create","timestamp":"2024-01-09T07:23:00.345Z"}
{"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n\nUnique constraint failed on the fields: (`id_order`)","service":"user-service","target":"order.create","timestamp":"2024-01-09T07:23:00.498Z"}
{"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n\nUnique constraint failed on the fields: (`id_order`)","service":"user-service","target":"order.create","timestamp":"2024-01-09T07:23:01.230Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:23:11.467Z"}
{"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n\nUnique constraint failed on the fields: (`id_order`)","service":"user-service","target":"order.create","timestamp":"2024-01-09T07:23:11.562Z"}
{"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n\nUnique constraint failed on the fields: (`id_order`)","service":"user-service","target":"order.create","timestamp":"2024-01-09T07:23:13.572Z"}
{"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n\nUnique constraint failed on the fields: (`id_order`)","service":"user-service","target":"order.create","timestamp":"2024-01-09T07:23:14.890Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:24:19.796Z"}
{"level":"error","message":"\nInvalid `prisma.product_order.create()` invocation:\n\n{\n  data: {\n    id: 1,\n    price: 30000,\n    jumlah: 3,\n+   product: {\n+     create: productCreateWithoutProduct_orderInput | productUncheckedCreateWithoutProduct_orderInput,\n+     connectOrCreate: productCreateOrConnectWithoutProduct_orderInput,\n+     connect: productWhereUniqueInput\n+   }\n  }\n}\n\nArgument `product` is missing.","service":"user-service","target":"product_order.create","timestamp":"2024-01-09T07:24:19.860Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:25:51.904Z"}
{"level":"error","message":"\nInvalid `prisma.product_order.create()` invocation:\n\n{\n  data: {\n    id: 1,\n    price: 30000,\n    jumlah: 3,\n+   product: {\n+     create: productCreateWithoutProduct_orderInput | productUncheckedCreateWithoutProduct_orderInput,\n+     connectOrCreate: productCreateOrConnectWithoutProduct_orderInput,\n+     connect: productWhereUniqueInput\n+   }\n  }\n}\n\nArgument `product` is missing.","service":"user-service","target":"product_order.create","timestamp":"2024-01-09T07:25:52.073Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:26:37.907Z"}
{"level":"error","message":"\nInvalid `prisma.product_order.create()` invocation:\n\n{\n  data: {\n    id_product: 1,\n    price: 30000,\n    jumlah: 3,\n+   product: {\n+     create: productCreateWithoutProduct_orderInput | productUncheckedCreateWithoutProduct_orderInput,\n+     connectOrCreate: productCreateOrConnectWithoutProduct_orderInput,\n+     connect: productWhereUniqueInput\n+   }\n  }\n}\n\nArgument `product` is missing.","service":"user-service","target":"product_order.create","timestamp":"2024-01-09T07:26:37.964Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:27:28.265Z"}
{"level":"error","message":"\nInvalid `prisma.product_order.create()` invocation:\n\n{\n  data: {\n    id_product: 1,\n    price: 30000,\n    jumlah: 3,\n+   product: {\n+     create: productCreateWithoutProduct_orderInput | productUncheckedCreateWithoutProduct_orderInput,\n+     connectOrCreate: productCreateOrConnectWithoutProduct_orderInput,\n+     connect: productWhereUniqueInput\n+   }\n  }\n}\n\nArgument `product` is missing.","service":"user-service","target":"product_order.create","timestamp":"2024-01-09T07:27:28.315Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:28:08.462Z"}
{"level":"error","message":"\nInvalid `prisma.product_order.create()` invocation:\n\n{\n  data: {\n    id_product: 1,\n    price: 30000,\n    jumlah: 3,\n    id_order: undefined,\n+   product: {\n+     create: productCreateWithoutProduct_orderInput | productUncheckedCreateWithoutProduct_orderInput,\n+     connectOrCreate: productCreateOrConnectWithoutProduct_orderInput,\n+     connect: productWhereUniqueInput\n+   }\n  }\n}\n\nArgument `product` is missing.","service":"user-service","target":"product_order.create","timestamp":"2024-01-09T07:28:08.520Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:30:18.658Z"}
{"level":"error","message":"\nInvalid `prisma.product_order.create()` invocation:\n\n\nForeign key constraint failed on the field: `product_order_id_order_fkey (index)`","service":"user-service","target":"product_order.create","timestamp":"2024-01-09T07:30:19.004Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:31:49.508Z"}
{"level":"error","message":"\nInvalid `prisma.product_order.create()` invocation:\n\n\nForeign key constraint failed on the field: `product_order_id_order_fkey (index)`","service":"user-service","target":"product_order.create","timestamp":"2024-01-09T07:31:49.572Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:32:43.537Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:33:46.388Z"}
{"level":"error","message":"\nInvalid `prisma.order.update()` invocation:\n\n{\n  where: {\n    id_order: \"order1\"\n  },\n  data: {\n    jumlah_product: 0,\n    price: 0,\n    ~~~~~\n?   id_order?: String | StringFieldUpdateOperationsInput,\n?   payment_using?: String | StringFieldUpdateOperationsInput,\n?   alamat_jalan?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_village?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_subsidtrick?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_regency?: String | StringFieldUpdateOperationsInput,\n?   alamat_province?: String | StringFieldUpdateOperationsInput,\n?   country?: String | StringFieldUpdateOperationsInput,\n?   kode_pos?: Int | IntFieldUpdateOperationsInput,\n?   total_price?: Int | NullableIntFieldUpdateOperationsInput | Null,\n?   status?: String | StringFieldUpdateOperationsInput,\n?   customer?: usersUpdateOneRequiredWithoutOrderNestedInput,\n?   product_order?: product_orderUpdateManyWithoutOrderNestedInput\n  }\n}\n\nUnknown argument `price`. Available options are marked with ?.","service":"user-service","target":"order.update","timestamp":"2024-01-09T07:33:46.498Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:35:02.298Z"}
{"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n\nUnique constraint failed on the fields: (`id_order`)","service":"user-service","target":"order.create","timestamp":"2024-01-09T07:35:02.364Z"}
{"level":"error","message":"\nInvalid `prisma.order.update()` invocation:\n\n{\n  where: {\n    id_order: \"order1\"\n  },\n  data: {\n    jumlah_product: 0,\n    price: 0,\n    ~~~~~\n?   id_order?: String | StringFieldUpdateOperationsInput,\n?   payment_using?: String | StringFieldUpdateOperationsInput,\n?   alamat_jalan?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_village?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_subsidtrick?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_regency?: String | StringFieldUpdateOperationsInput,\n?   alamat_province?: String | StringFieldUpdateOperationsInput,\n?   country?: String | StringFieldUpdateOperationsInput,\n?   kode_pos?: Int | IntFieldUpdateOperationsInput,\n?   total_price?: Int | NullableIntFieldUpdateOperationsInput | Null,\n?   status?: String | StringFieldUpdateOperationsInput,\n?   customer?: usersUpdateOneRequiredWithoutOrderNestedInput,\n?   product_order?: product_orderUpdateManyWithoutOrderNestedInput\n  }\n}\n\nUnknown argument `price`. Available options are marked with ?.","service":"user-service","target":"order.update","timestamp":"2024-01-09T07:35:50.483Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:37:16.863Z"}
{"level":"error","message":"\nInvalid `prisma.order.update()` invocation:\n\n{\n  where: {\n    id_order: \"order1\"\n  },\n  data: {\n    jumlah_product: 0,\n    price: 0,\n    ~~~~~\n?   id_order?: String | StringFieldUpdateOperationsInput,\n?   payment_using?: String | StringFieldUpdateOperationsInput,\n?   alamat_jalan?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_village?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_subsidtrick?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_regency?: String | StringFieldUpdateOperationsInput,\n?   alamat_province?: String | StringFieldUpdateOperationsInput,\n?   country?: String | StringFieldUpdateOperationsInput,\n?   kode_pos?: Int | IntFieldUpdateOperationsInput,\n?   total_price?: Int | NullableIntFieldUpdateOperationsInput | Null,\n?   status?: String | StringFieldUpdateOperationsInput,\n?   customer?: usersUpdateOneRequiredWithoutOrderNestedInput,\n?   product_order?: product_orderUpdateManyWithoutOrderNestedInput\n  }\n}\n\nUnknown argument `price`. Available options are marked with ?.","service":"user-service","target":"order.update","timestamp":"2024-01-09T07:37:16.994Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:38:25.695Z"}
{"level":"error","message":"\nInvalid `prisma.order.update()` invocation:\n\n{\n  where: {\n    id_order: \"order1\"\n  },\n  data: {\n    jumlah_product: 0,\n    price: 0,\n    ~~~~~\n?   id_order?: String | StringFieldUpdateOperationsInput,\n?   payment_using?: String | StringFieldUpdateOperationsInput,\n?   alamat_jalan?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_village?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_subsidtrick?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_regency?: String | StringFieldUpdateOperationsInput,\n?   alamat_province?: String | StringFieldUpdateOperationsInput,\n?   country?: String | StringFieldUpdateOperationsInput,\n?   kode_pos?: Int | IntFieldUpdateOperationsInput,\n?   total_price?: Int | NullableIntFieldUpdateOperationsInput | Null,\n?   status?: String | StringFieldUpdateOperationsInput,\n?   customer?: usersUpdateOneRequiredWithoutOrderNestedInput,\n?   product_order?: product_orderUpdateManyWithoutOrderNestedInput\n  }\n}\n\nUnknown argument `price`. Available options are marked with ?.","service":"user-service","target":"order.update","timestamp":"2024-01-09T07:38:25.828Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:39:10.795Z"}
{"level":"error","message":"\nInvalid `prisma.order.update()` invocation:\n\n{\n  where: {\n    id_order: \"order1\"\n  },\n  data: {\n    jumlah_product: 0,\n    price: 0,\n    ~~~~~\n?   id_order?: String | StringFieldUpdateOperationsInput,\n?   payment_using?: String | StringFieldUpdateOperationsInput,\n?   alamat_jalan?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_village?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_subsidtrick?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_regency?: String | StringFieldUpdateOperationsInput,\n?   alamat_province?: String | StringFieldUpdateOperationsInput,\n?   country?: String | StringFieldUpdateOperationsInput,\n?   kode_pos?: Int | IntFieldUpdateOperationsInput,\n?   total_price?: Int | NullableIntFieldUpdateOperationsInput | Null,\n?   status?: String | StringFieldUpdateOperationsInput,\n?   customer?: usersUpdateOneRequiredWithoutOrderNestedInput,\n?   product_order?: product_orderUpdateManyWithoutOrderNestedInput\n  }\n}\n\nUnknown argument `price`. Available options are marked with ?.","service":"user-service","target":"order.update","timestamp":"2024-01-09T07:39:10.935Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:40:21.868Z"}
{"level":"error","message":"\nInvalid `prisma.order.update()` invocation:\n\n{\n  where: {\n    id_order: \"order1\"\n  },\n  data: {\n    jumlah_product: 0,\n    price: 0,\n    ~~~~~\n?   id_order?: String | StringFieldUpdateOperationsInput,\n?   payment_using?: String | StringFieldUpdateOperationsInput,\n?   alamat_jalan?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_village?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_subsidtrick?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_regency?: String | StringFieldUpdateOperationsInput,\n?   alamat_province?: String | StringFieldUpdateOperationsInput,\n?   country?: String | StringFieldUpdateOperationsInput,\n?   kode_pos?: Int | IntFieldUpdateOperationsInput,\n?   total_price?: Int | NullableIntFieldUpdateOperationsInput | Null,\n?   status?: String | StringFieldUpdateOperationsInput,\n?   customer?: usersUpdateOneRequiredWithoutOrderNestedInput,\n?   product_order?: product_orderUpdateManyWithoutOrderNestedInput\n  }\n}\n\nUnknown argument `price`. Available options are marked with ?.","service":"user-service","target":"order.update","timestamp":"2024-01-09T07:40:22.011Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:41:11.110Z"}
{"level":"error","message":"\nInvalid `prisma.order.update()` invocation:\n\n{\n  where: {\n    id_order: \"order1\"\n  },\n  data: {\n    jumlah_product: 0,\n    price: 0,\n    ~~~~~\n?   id_order?: String | StringFieldUpdateOperationsInput,\n?   payment_using?: String | StringFieldUpdateOperationsInput,\n?   alamat_jalan?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_village?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_subsidtrick?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_regency?: String | StringFieldUpdateOperationsInput,\n?   alamat_province?: String | StringFieldUpdateOperationsInput,\n?   country?: String | StringFieldUpdateOperationsInput,\n?   kode_pos?: Int | IntFieldUpdateOperationsInput,\n?   total_price?: Int | NullableIntFieldUpdateOperationsInput | Null,\n?   status?: String | StringFieldUpdateOperationsInput,\n?   customer?: usersUpdateOneRequiredWithoutOrderNestedInput,\n?   product_order?: product_orderUpdateManyWithoutOrderNestedInput\n  }\n}\n\nUnknown argument `price`. Available options are marked with ?.","service":"user-service","target":"order.update","timestamp":"2024-01-09T07:41:11.274Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:48:34.784Z"}
{"level":"error","message":"\nInvalid `prisma.order.update()` invocation:\n\n{\n  where: {\n    id_order: \"order1\"\n  },\n  data: {\n    jumlah_product: 6,\n    price: 60000,\n    ~~~~~\n?   id_order?: String | StringFieldUpdateOperationsInput,\n?   payment_using?: String | StringFieldUpdateOperationsInput,\n?   alamat_jalan?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_village?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_subsidtrick?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   alamat_regency?: String | StringFieldUpdateOperationsInput,\n?   alamat_province?: String | StringFieldUpdateOperationsInput,\n?   country?: String | StringFieldUpdateOperationsInput,\n?   kode_pos?: Int | IntFieldUpdateOperationsInput,\n?   total_price?: Int | NullableIntFieldUpdateOperationsInput | Null,\n?   status?: String | StringFieldUpdateOperationsInput,\n?   customer?: usersUpdateOneRequiredWithoutOrderNestedInput,\n?   product_order?: product_orderUpdateManyWithoutOrderNestedInput\n  }\n}\n\nUnknown argument `price`. Available options are marked with ?.","service":"user-service","target":"order.update","timestamp":"2024-01-09T07:48:34.851Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:50:05.309Z"}
{"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n\nUnique constraint failed on the fields: (`id_order`)","service":"user-service","target":"order.create","timestamp":"2024-01-09T07:50:05.396Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:51:54.403Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T07:58:45.153Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T08:19:40.187Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T08:20:54.209Z"}
{"level":"info","message":"Starting a postgresql pool with 13 connections.","service":"user-service","target":"quaint::pooled","timestamp":"2024-01-09T08:54:41.043Z"}
