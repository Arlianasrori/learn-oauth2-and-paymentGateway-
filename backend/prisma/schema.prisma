// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  email String @id @db.VarChar(160)
  no_hp String @db.VarChar(12) @unique
  password String @db.VarChar(160)
  name String @db.VarChar(160)
  alamat_id Int @unique @default(autoincrement())
  seller Boolean @default(false)
  refresh_token  String?  @db.VarChar(500)
  refresh_token_seller  String?  @db.VarChar(500)
  verify Boolean @default(false)

  alamat alamat?
  cart cart[]
  product product[]
  order order[]
  notification notification[]
  notificationRead notificationRead[]

  @@map("users")
} 
model notification {
  id Int @id @default(autoincrement())
  user_email String? @db.VarChar(160)
  title String @db.VarChar(255)
  detail String @db.VarChar(5000)
  create_at DateTime @default(now())
  type String @db.VarChar(255)
  
  user users? @relation(fields: [user_email],references: [email])
  notificationRead notificationRead[] 
}


model notificationRead {
  id Int @id @default(autoincrement())
  isread Boolean
  notification_id Int 
  user_email String? @db.VarChar(255)

  notification notification @relation(fields: [notification_id],references: [id])
  user users? @relation(fields: [user_email],references: [email])
}

model alamat {
  id Int @id 
	village String? @db.VarChar(160)
	subsidtrick String? @db.VarChar(160)
	regency String @db.VarChar(160)
	province String @db.VarChar(160) 
	country String @db.VarChar(160) 
	kode_pos Int

  users users @relation(fields: [id],references: [alamat_id])
  @@map("alamat")
}

model cart {
  id Int @id @default(autoincrement())
	owner String @db.VarChar(160)
  id_product Int
  count Int
	price Int 

  users users @relation(fields: [owner],references: [email])
  product product @relation(fields: [id_product],references: [id])
}

model product {
	id Int @id @default(autoincrement())
	nama_product String @db.VarChar(160)
	deks String? @db.VarChar(160)
	price Int
	category String @db.VarChar(160)
	stok  Int
	img String? @db.VarChar(160)
	sold_by String @db.VarChar(160)

  users users @relation(fields: [sold_by],references: [email])
  cart cart[]
  product_order product_order[]
}

model order {
	id_order String @id @db.VarChar(255)
	payment_using String? @db.VarChar(160)
	email_customer String @db.VarChar(160) 
	alamat_jalan String? @db.VarChar(160)
  alamat_village String? @db.VarChar(160) 
  alamat_subsidtrick String? @db.VarChar(160)
	alamat_regency String @db.VarChar(160)
	alamat_province String @db.VarChar(160) 
	country String @db.VarChar(160) 
  kode_pos Int
	jumlah_product Int?
	total_price Int?
  status String @default("pending")

  customer users @relation(fields: [email_customer],references: [email])
  product_order product_order[]

  @@map("orders")
}

model product_order { 
  id Int @id @default(autoincrement())
  id_product Int 
  id_order String @db.VarChar(255)
  jumlah Int?
  price Int?

  product product @relation(fields: [id_product],references: [id])
  order order @relation(fields: [id_order],references: [id_order])
}

